Title:   Overview

	// State it's an API in the begingin, don't wait till the end.
Inbox is a layer on top of existing email providers that makes it easy to integrate with your users' email data. It eliminates the complexity of old protocols like IMAP and MIME, and allows you to interact with email via a modern API. 

The Inbox API is designed around the [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) ideology, providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE. Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise.

	//I don't know enough about the API, or how they work to determine whether threads and tags are worth menioning right here at all.
[Threads](#threads) are a first-class object in Inbox, allowing you to build beautiful mail applications that behave the way users have come to expect. Actions like archiving or deleting are performed on threads, not individual messages.

[Tags](#tags) are used to group threads. A given thread can have zero or more tags. Tags are also used to represent state, such as `sending`. Note: tags are not equivalent to IMAP folders or Gmail labels, although these properties may be accessed via tags.

	// Beatiful, get the security concerns squished right away. Are there any other security measure you are having in palce that are worth meanitiong. Maybe this should have it's own heading
Inbox uses [OAuth2](http://oauth.net/documentation/getting-started/) for authentication with a specific user's account. Subsequent API requests are made with an `access_token` for that user, secured by HTTP basic auth over SSL (TLS). The user auth flow is documented below.

	//This should be at the end, maybe with it's own headline so it's not to disturb the introduction of the API
If you need help, check out our answers to some [common questions](#FAQ) or chat live with our engineering team in `##inbox` on [freenode](http://webchat.freenode.net/).
