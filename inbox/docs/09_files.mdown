Title: Files

	//Hmmm.. no intro, so far these thins had at least a sentence or two of an introduction to what this is about. What are files about?!

# Retrieving a file

    GET https://api.inboxapp.com/n/<namespace_id>/files/<file_id>

**Response:**

```
:::json
{
    "id": "conefgqnnsvqlj64iu0lvsb7g",
    "object": "file",
    "namespace": "awa6ltos76vz5hvphkp8k17nt",
    "filename": "House-Blueprints.zip",
    "size": 3145728,
    "content-type": "application/zip",
    "message": "152ev3uktfrtk3y2subs4i9mn",
    "is_embedded": false,
}
```

# Retrieving many files

	//Here we have this again. Tisk tisk. THe note on the 

This API supports [filters](#filters), allowing you to fetch multiple files matching specific critera. For example, the following will return all zip files. Note the `/` character in the content type has been replaced by the [percent-encoded](http://en.wikipedia.org/wiki/Percent-encoding) value `%2F`.

    GET https://api.inboxapp.com/n/<namespace_id>/files?content_type=application%2Fzip

## A note on content-types

In the spirit of transcending [MIME](http://www.ietf.org/rfc/rfc2045.txt), Inbox only references content-types, and not mimetypes. The mimetype of a downloaded attachment is referred to as the content-type. All files are encoded either as UTF-8 or binary.


# Downloading files

Files can be downloaded by appending `/download` to the URI. The body response will include the filename.

    GET https://api.inboxapp.com/n/<namespace_id>/files/<file_id>/download


# Uploading a new file

    POST https://api.inboxapp.com/n/<namespace_id>/files
    
    //"This API..." What API?

This API is used to transfer files to Inbox in order to add them to a draft message. Data should be sent as multipart-form data with a single file field named `file`. An example of a correct request is shown below:

    POST https://api.inboxapp.com/v1/n/account_123ad123512/files HTTP/1.1
    Accept-Encoding: gzip, deflate
    Content-Type: multipart/form-data; boundary=---------------------------41184676334
    Content-Length: 29278

    -----------------------------41184676334
    Content-Disposition: form-data; name="file"; filename="GrandCanyon.jpg"
    Content-Type: image/jpeg

    <<<Binary data here>>>

A successful upload will return an array with a single file object. This object's ID should be added to subsequent [draft updates](#drafts) to attach the file to a draft before sending.

//Wait, how did we get into draft? How does this differ from a typical email massage, does it differ at all?

```
:::json
[
	{
	    <file_object>
	}
]
```
